<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="15:ArbiterDemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9430358a60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9430355220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9430355220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9430505198"/></to>
    </wire>
    <wire loc="16:ArbiterDemoAppC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b94305109d0"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b94305570c0"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b94305570c0"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b943057f020"/></to>
    </wire>
    <wire loc="17:ArbiterDemoAppC.nc">
      <from><interface-ref name="Button0" scoped="" ref="0x2b943050bc38"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b9430385020"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b9430385020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b943040a020"/></to>
    </wire>
    <wire loc="18:ArbiterDemoAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2b9430523e48"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b94303841a0"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b94303841a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9430419120"/></to>
    </wire>
    <wire loc="19:ArbiterDemoAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b943052a578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b943062ba60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b943062ba60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b943063de30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:ArbiterDemoAppC.nc">
      <from><interface-ref name="Resource0" scoped="" ref="0x2b9430535830"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b94307e9960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b94307e9960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9430800748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:ArbiterDemoAppC.nc">
      <from><interface-ref name="ResourceOperations0" scoped="" ref="0x2b9430533730"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b943091b5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b943091b5b8"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b94307ff9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:ArbiterDemoAppC.nc">
      <from><interface-ref name="Resource1" scoped="" ref="0x2b9430533e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b943093b0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b943093b0c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9430800748"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:ArbiterDemoAppC.nc">
      <from><interface-ref name="ResourceOperations1" scoped="" ref="0x2b9430525c08"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b943093bcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b943093bcb8"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b94307ff9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9430354620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9430cc41a8"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9430354620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9430634768"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b94305057d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b943025d600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b943025d600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9430314448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b94305041d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9430357620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9430357620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9430366600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9430504898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b9430354620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b943035a618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94304e78f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b9430365398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94304e72c0"/></to>
    </wire>
    <wire loc="100:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9430366ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94308fd470"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9430366ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b943035fb98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b943035fb98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9430369698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b943036c360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9430352380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9430368b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b943036c360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b94303b1af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b943048a970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b9430393658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9430431020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9430431020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430aa4710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b94303a4658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9430440d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9430440d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b10710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b94303a9348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94304425b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94304425b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b8a710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b943037f348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9430408740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9430408740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430972a10"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b94303ab020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94304442a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94304442a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b63710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b943037d658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9430410930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9430410930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309dc970"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b943038e7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b943041f740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b943041f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a37710"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b943039eaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b943042d430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b943042d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a9b710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b94303a1af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b943043c120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b943043c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b07710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b9430377af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94303fd020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94303fd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430981a10"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b9430388af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b943040dd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b943040dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309d3970"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b943038bc78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b943041cbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b943041cbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a57710"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b943039a020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b943042a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b943042a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430abc710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b94303a67e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9430451a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9430451a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b81710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b94303ad7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b943049f020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b9430398348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9430432a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9430432a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b17710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b9430381020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94303fa430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94303fa430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430978a10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9430419120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309f2970"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b94303af4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430497ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b94303904d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9430421500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9430421500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a3e6a8"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b94303927e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9430430120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9430430120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430aa1710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b94303a37e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b943043fe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b943043fe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b0d710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b94303a84d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9430453740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9430453740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b87710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b943037e4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94304078c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94304078c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b943096fa10"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b943037c7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b943040fa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b943040fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309d9970"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b943038d968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b943041e8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b943041e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a34710"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b943039dc78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b943042c5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b943042c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430ac2710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b94303a0c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b943043b2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b943043b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b30710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b9430376c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94303fc120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94303fc120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b943097ea10"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b9430387c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b943040ce18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b943040ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309d0970"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b943038ae00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b943041ad60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b943041ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a54710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b94303b2968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9430450bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9430450bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b7e710"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b94303941a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9430423e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9430423e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430aa86a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b94303a54d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9430441bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9430441bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b13710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b94303aa1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9430443430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9430443430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b5f710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b94303ba968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94304ac180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b94303801a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94304095b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94304095b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430975a10"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b9430383348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94304182a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94304182a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309ef970"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b943039fe00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94304451e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94304451e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b666a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b943038f658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94304205b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94304205b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a3a710"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b9430391968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b943042e2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b943042e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a9e710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b94303a2968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b943043d020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b943043d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b0a710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b94303a7658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94304528c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94304528c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b84710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b943036a878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94303ffdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94303ffdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b943095eab0"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b9430389968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b943040ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b943040ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309d6970"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b943038caf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b943041da50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b943041da50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a5a710"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b943039ce00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b943042b740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b943042b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430abf710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b94303ae658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430493c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b94303991a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9430433930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9430433930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430b1a6a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b9430395020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9430429e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9430429e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9430a51710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b9430375e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94303fb2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94303fb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b943097ba10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b943040a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94309f5970"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94303132b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b943031c758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9430333660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94303392b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94306f0268"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b94305b8368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="219:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b94305ce6c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b94305b00c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b94305e8190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b94305797d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="356:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b9430600ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b94305d97d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b943063de30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b943064a4a0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b943064a4a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94307d1020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9430634768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b943063e020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9430641980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b94307e2128"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b943063e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b943075a190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b94307cb208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9430787ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9430782c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9430650838"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9430650838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b943075a938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b94307d9330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b9430662e40"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b9430662e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9430756a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b9430756a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9430c6b020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b943075a190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9430c36600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b943075a938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9430c36da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9430c68168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94306d5e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b94306d5e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94306de180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9430c63020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b94306e8020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b94306e8020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b94306f5160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b9430c62020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b94306e6020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b94306e6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b94306f4190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9430c5e0a0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b94306e3218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b94306e3218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b94306f0958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b943077ecf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b94307c6478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b943091bb90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b94307fd5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94307fc300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b943093e430"/></to>
    </wire>
    <wire loc="61:SharedResourceP.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b94307fd5b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9430882398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9430882398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9430cc0698"/></to>
    </wire>
    <wire loc="60:SharedResourceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9430800748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9430883670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b9430883670"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9430cc1830"/></to>
    </wire>
    <wire loc="58:SharedResourceP.nc">
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b94307ff9d8"/></from>
      <to><interface-ref name="SharedResourceOperations" scoped="" ref="0x2b943087c3c8"/></to>
    </wire>
    <wire loc="62:SharedResourceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9430880020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94307fc300"/></to>
    </wire>
    <wire loc="64:SharedResourceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b943087a130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9430881700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9430881700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9430cbf9d8"/></to>
    </wire>
    <wire loc="65:SharedResourceP.nc">
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b943087ca58"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b943087e5a8"/></to>
    </wire>
    <wire loc="66:SharedResourceP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b943087ebb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9430897440"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9430897440"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b94308a8e08"/></to>
    </wire>
    <wire loc="67:SharedResourceP.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b9430895630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9430927020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9430927020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b943063de30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9430882ad8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9430cc0dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9430cbe3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9430880020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b9430cbeb68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9430cc4780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9430cbb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b94308fd470"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94308a8840"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b94308a46c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b94308a6488"/></to>
    </wire>
    <wire loc="102:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b94308a6488"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b943036a878"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b94308a3958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b94308c3688"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b94308c3688"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b9430377af0"/></to>
    </wire>
    <wire loc="56:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b94308a2ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b94308c2810"/></to>
    </wire>
    <wire loc="104:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b94308c2810"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b9430376c78"/></to>
    </wire>
    <wire loc="112:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA6" scoped="" ref="0x2b94308de518"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b943037f348"/></to>
    </wire>
    <wire loc="116:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB1" scoped="" ref="0x2b94308dacb0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b943037c7e0"/></to>
    </wire>
    <wire loc="121:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB6" scoped="" ref="0x2b94308d4818"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b94303841a0"/></to>
    </wire>
    <wire loc="127:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC3" scoped="" ref="0x2b94308ce380"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b943038d968"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD5" scoped="" ref="0x2b94308e7cb0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b943039dc78"/></to>
    </wire>
    <wire loc="107:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA1" scoped="" ref="0x2b94308c0b38"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b9430377af0"/></to>
    </wire>
    <wire loc="133:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD0" scoped="" ref="0x2b94308ec1b8"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b94303941a0"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE2" scoped="" ref="0x2b94308e0818"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x2b94303a54d0"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE7" scoped="" ref="0x2b94308fe380"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b94303a0c78"/></to>
    </wire>
    <wire loc="125:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC1" scoped="" ref="0x2b94308d0020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b943038f658"/></to>
    </wire>
    <wire loc="110:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA4" scoped="" ref="0x2b94308bc1b8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b9430381020"/></to>
    </wire>
    <wire loc="119:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB4" scoped="" ref="0x2b94308d6380"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x2b9430387c78"/></to>
    </wire>
    <wire loc="130:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC6" scoped="" ref="0x2b94308efcb0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b943038ae00"/></to>
    </wire>
    <wire loc="136:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD3" scoped="" ref="0x2b94308e9818"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b9430391968"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE5" scoped="" ref="0x2b9430900020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b94303a2968"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE0" scoped="" ref="0x2b94308e2380"/></from>
      <to><interface-ref name="PortE0" scoped="" ref="0x2b94303991a0"/></to>
    </wire>
    <wire loc="113:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA7" scoped="" ref="0x2b94308dd818"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x2b943037e4d0"/></to>
    </wire>
    <wire loc="122:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB7" scoped="" ref="0x2b94308d39b0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b9430383348"/></to>
    </wire>
    <wire loc="134:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD1" scoped="" ref="0x2b94308eb380"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b9430393658"/></to>
    </wire>
    <wire loc="108:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA2" scoped="" ref="0x2b94308bfe38"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b9430376c78"/></to>
    </wire>
    <wire loc="117:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB2" scoped="" ref="0x2b94308d8020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b9430389968"/></to>
    </wire>
    <wire loc="128:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC4" scoped="" ref="0x2b94308f1518"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b943038caf0"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD6" scoped="" ref="0x2b94308e4020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b943039ce00"/></to>
    </wire>
    <wire loc="145:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE3" scoped="" ref="0x2b94309039b0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x2b94303a4658"/></to>
    </wire>
    <wire loc="115:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB0" scoped="" ref="0x2b94308db9b0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b943037d658"/></to>
    </wire>
    <wire loc="111:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA5" scoped="" ref="0x2b94308df380"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b94303801a0"/></to>
    </wire>
    <wire loc="120:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB5" scoped="" ref="0x2b94308d5518"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b9430385020"/></to>
    </wire>
    <wire loc="126:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC2" scoped="" ref="0x2b94308cf1b8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b943038e7e0"/></to>
    </wire>
    <wire loc="131:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC7" scoped="" ref="0x2b94308ed020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b9430395020"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD4" scoped="" ref="0x2b94308e89b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b943039eaf0"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE1" scoped="" ref="0x2b94308e1518"/></from>
      <to><interface-ref name="PortE1" scoped="" ref="0x2b9430398348"/></to>
    </wire>
    <wire loc="106:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA0" scoped="" ref="0x2b94308c19a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b943036a878"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE6" scoped="" ref="0x2b94308ff1b8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b94303a1af0"/></to>
    </wire>
    <wire loc="109:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA3" scoped="" ref="0x2b94308bd020"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x2b9430375e00"/></to>
    </wire>
    <wire loc="118:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB3" scoped="" ref="0x2b94308d71b8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b9430388af0"/></to>
    </wire>
    <wire loc="124:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC0" scoped="" ref="0x2b94308d2cb0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b94303904d0"/></to>
    </wire>
    <wire loc="129:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC5" scoped="" ref="0x2b94308f0818"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b943038bc78"/></to>
    </wire>
    <wire loc="135:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD2" scoped="" ref="0x2b94308ea518"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b94303927e0"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD7" scoped="" ref="0x2b94308e31b8"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b943039a020"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE4" scoped="" ref="0x2b9430902cb0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b94303a37e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b943093a328"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b94307fd5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94307fc300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b943093aa88"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArbiterDemoC" loc="5:ArbiterDemoC.nc">
      <module/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="ArbiterDemoAppC.Timer0" loc="44(ArbiterDemoAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9430660c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbiterDemoAppC.Resource0" loc="49(ArbiterDemoAppC.Resource0):SharedResourceC.nc">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;&#10; changed by Markus Hartmann (e9808811@student.tuwien.ac.at)&#10; @date 2011-08-25&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedResourceC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceP" loc="45:SharedResourceP.nc">
      <documentation loc="33:SharedResourceP.nc">
        <short>&#10; The SharedResourceP component is used to create a shared resource&#10; out of a dedicated one.</short>
        <long>&#10; The SharedResourceP component is used to create a shared resource&#10; out of a dedicated one.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;&#10; changed by Markus Hartmann (e9808811@student.tuwien.ac.at)&#10; @date 2011-08-25&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SharedResourceP.Arbiter" loc="89(SharedResourceP.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Shared.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceP.Arbiter.Queue" loc="42(SharedResourceP.Arbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SharedResourceP.Arbiter.Arbiter" loc="52(SharedResourceP.Arbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SharedResourceImplP" loc="47:SharedResourceImplP.nc">
      <documentation loc="33:SharedResourceImplP.nc">
        <short>&#10; The SharedResourceImplP component is used to wrap all of the operations&#10; from a dedicated resource so that access to them is protected when &#10; it is used as a shared resource.</short>
        <long>&#10; The SharedResourceImplP component is used to wrap all of the operations&#10; from a dedicated resource so that access to them is protected when &#10; it is used as a shared resource.  It uses the ArbiterInfo interface &#10; provided by an Arbiter to accomplish this.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;&#10; changed by Markus Hartmann (e9808811@student.tuwien.ac.at)&#10; @date 2011-08-25&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ResourceP" loc="5:ResourceP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SharedResourceP.Timer0" loc="44(SharedResourceP.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbiterDemoAppC.Resource1" loc="49(ArbiterDemoAppC.Resource1):SharedResourceC.nc">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;&#10; changed by Markus Hartmann (e9808811@student.tuwien.ac.at)&#10; @date 2011-08-25&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SharedResourceC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b94303b7ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b94303c1020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b94303c1368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b94303c5610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b94303c5978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b94303c5ce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b94303c2060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9430459020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9430459388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b94304596f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9430459a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9430660c68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9430660c68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b943065d020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b943066c410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b943066c410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b943066c700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b943063fc68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b943063fc68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b943077ccd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b943077ccd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9430797020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94307e4998" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94307e4998"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SharedResourceC" loc="49:SharedResourceC.nc" abstract="">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;&#10; changed by Markus Hartmann (e9808811@student.tuwien.ac.at)&#10; @date 2011-08-25&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b94307fbdf8" loc="89:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b943080a020" loc="42:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b94308328e8" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b9430354620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9430354620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430354970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9430355220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9430355220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9430355570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9430352380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9430352380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94303526d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9430357620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9430357620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430357970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b943035a618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b943035a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b943035a968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b943035aaf0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b943035ac78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b943035ae00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9430352020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b9430366ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b9430366ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430365020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9430366600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9430366600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430366950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b9430365398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b9430365398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94303656e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b943036c360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b943036c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b943036c6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b943035fb98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b943035fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b943036c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9430368b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9430368b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430368e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b94303708d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b94303708d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430370c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430370db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430368020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303681a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430368330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303684b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430368640"/>
        <function-ref name="clr" scoped="" ref="0x2b94303687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9430369698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9430369698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94303699e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b94303b1af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b94303b1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303b05e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303b0770"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303b08f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303b0a80"/>
        <function-ref name="get" scoped="" ref="0x2b94303b0c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303b0d90"/>
        <function-ref name="set" scoped="" ref="0x2b94303af020"/>
        <function-ref name="clr" scoped="" ref="0x2b94303af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b9430393658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b9430393658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303939a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430393b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430393cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430393e40"/>
        <function-ref name="get" scoped="" ref="0x2b9430392020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303921a8"/>
        <function-ref name="set" scoped="" ref="0x2b9430392330"/>
        <function-ref name="clr" scoped="" ref="0x2b94303924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b94303a4658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b94303a4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a49a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a4b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a4e40"/>
        <function-ref name="get" scoped="" ref="0x2b94303a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a31a8"/>
        <function-ref name="set" scoped="" ref="0x2b94303a3330"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b94303a9348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b94303a9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a9698"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a9820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a9b30"/>
        <function-ref name="get" scoped="" ref="0x2b94303a9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a9e40"/>
        <function-ref name="set" scoped="" ref="0x2b94303a8020"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b943037f348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b943037f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943037f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b943037f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b943037f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943037fb30"/>
        <function-ref name="get" scoped="" ref="0x2b943037fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943037fe40"/>
        <function-ref name="set" scoped="" ref="0x2b943037e020"/>
        <function-ref name="clr" scoped="" ref="0x2b943037e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b94303ab020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b94303ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303ab370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303ab4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303ab680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303ab808"/>
        <function-ref name="get" scoped="" ref="0x2b94303ab990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303abb18"/>
        <function-ref name="set" scoped="" ref="0x2b94303abca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94303abe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b943037d658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b943037d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943037d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943037db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b943037dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943037de40"/>
        <function-ref name="get" scoped="" ref="0x2b943037c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943037c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b943037c330"/>
        <function-ref name="clr" scoped="" ref="0x2b943037c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b943038e7e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b943038e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943038eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b943038ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943038ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943038d020"/>
        <function-ref name="get" scoped="" ref="0x2b943038d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943038d330"/>
        <function-ref name="set" scoped="" ref="0x2b943038d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b943038d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b943039eaf0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b943039eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943039ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b943039d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943039d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943039d330"/>
        <function-ref name="get" scoped="" ref="0x2b943039d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943039d640"/>
        <function-ref name="set" scoped="" ref="0x2b943039d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943039d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b94303a1af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b94303a1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a1e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a0330"/>
        <function-ref name="get" scoped="" ref="0x2b94303a04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a0640"/>
        <function-ref name="set" scoped="" ref="0x2b94303a07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b9430377af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b9430377af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430377e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430376020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303761a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430376330"/>
        <function-ref name="get" scoped="" ref="0x2b94303764b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430376640"/>
        <function-ref name="set" scoped="" ref="0x2b94303767c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430376950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b9430388af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b9430388af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430388e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430387020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303871a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430387330"/>
        <function-ref name="get" scoped="" ref="0x2b94303874b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430387640"/>
        <function-ref name="set" scoped="" ref="0x2b94303877c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430387950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b943038bc78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b943038bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943038a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b943038a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943038a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943038a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b943038a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943038a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b943038a950"/>
        <function-ref name="clr" scoped="" ref="0x2b943038aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b943039a020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b943039a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943039a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b943039a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943039a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943039a808"/>
        <function-ref name="get" scoped="" ref="0x2b943039a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943039ab18"/>
        <function-ref name="set" scoped="" ref="0x2b943039aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b943039ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b94303a67e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b94303a67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a6b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303b2020"/>
        <function-ref name="get" scoped="" ref="0x2b94303b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303b2330"/>
        <function-ref name="set" scoped="" ref="0x2b94303b24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b94303ad7e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b94303ad7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303adb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303adcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303ade40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303ba020"/>
        <function-ref name="get" scoped="" ref="0x2b94303ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303ba330"/>
        <function-ref name="set" scoped="" ref="0x2b94303ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b9430398348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b9430398348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430398698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430398820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303989a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430398b30"/>
        <function-ref name="get" scoped="" ref="0x2b9430398cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430398e40"/>
        <function-ref name="set" scoped="" ref="0x2b94303a5020"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b9430381020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b9430381020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430381370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430381680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430381808"/>
        <function-ref name="get" scoped="" ref="0x2b9430381990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430381b18"/>
        <function-ref name="set" scoped="" ref="0x2b9430381ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430381e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b94303841a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b94303841a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303844f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430384678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430384800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430384988"/>
        <function-ref name="get" scoped="" ref="0x2b9430384b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430384c98"/>
        <function-ref name="set" scoped="" ref="0x2b9430384e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9430383020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b94303af4d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b94303af4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303af820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303af9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303afb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303afcb8"/>
        <function-ref name="get" scoped="" ref="0x2b94303afe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303ae020"/>
        <function-ref name="set" scoped="" ref="0x2b94303ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b94303904d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b94303904d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430390820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303909a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430390b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430390cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9430390e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943038f020"/>
        <function-ref name="set" scoped="" ref="0x2b943038f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b943038f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b94303927e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b94303927e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430392b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430392cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430392e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430391020"/>
        <function-ref name="get" scoped="" ref="0x2b94303911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430391330"/>
        <function-ref name="set" scoped="" ref="0x2b94303914b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430391640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b94303a37e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b94303a37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a3b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a2020"/>
        <function-ref name="get" scoped="" ref="0x2b94303a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a2330"/>
        <function-ref name="set" scoped="" ref="0x2b94303a24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b94303a84d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b94303a84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a8820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a89a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a8cb8"/>
        <function-ref name="get" scoped="" ref="0x2b94303a8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a7020"/>
        <function-ref name="set" scoped="" ref="0x2b94303a71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b943037e4d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b943037e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943037e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b943037e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943037eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943037ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b943037ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943037d020"/>
        <function-ref name="set" scoped="" ref="0x2b943037d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b943037d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b943037c7e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b943037c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943037cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b943037ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943037ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430389020"/>
        <function-ref name="get" scoped="" ref="0x2b94303891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430389330"/>
        <function-ref name="set" scoped="" ref="0x2b94303894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430389640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b943038d968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b943038d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943038dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943038de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b943038c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943038c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b943038c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943038c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b943038c640"/>
        <function-ref name="clr" scoped="" ref="0x2b943038c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b943039dc78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b943039dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943039c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b943039c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943039c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943039c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b943039c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943039c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b943039c950"/>
        <function-ref name="clr" scoped="" ref="0x2b943039cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b94303a0c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b94303a0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943039f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b943039f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943039f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943039f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b943039f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943039f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b943039f950"/>
        <function-ref name="clr" scoped="" ref="0x2b943039fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b9430376c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b9430376c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430375020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303751a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430375330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303754b8"/>
        <function-ref name="get" scoped="" ref="0x2b9430375640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303757c8"/>
        <function-ref name="set" scoped="" ref="0x2b9430375950"/>
        <function-ref name="clr" scoped="" ref="0x2b9430375ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b9430387c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b9430387c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303860f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430386278"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430386400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430386588"/>
        <function-ref name="get" scoped="" ref="0x2b9430386710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430386898"/>
        <function-ref name="set" scoped="" ref="0x2b9430386a20"/>
        <function-ref name="clr" scoped="" ref="0x2b9430386ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b943038ae00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b943038ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303971a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430397330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303974b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430397640"/>
        <function-ref name="get" scoped="" ref="0x2b94303977c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430397950"/>
        <function-ref name="set" scoped="" ref="0x2b9430397ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430397c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b94303b2968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b94303b2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303b2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303b2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303b11a8"/>
        <function-ref name="get" scoped="" ref="0x2b94303b1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303b14b8"/>
        <function-ref name="set" scoped="" ref="0x2b94303b1640"/>
        <function-ref name="clr" scoped="" ref="0x2b94303b17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b94303941a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b94303941a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303946f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430394878"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430394a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430394b88"/>
        <function-ref name="get" scoped="" ref="0x2b9430394d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430393020"/>
        <function-ref name="set" scoped="" ref="0x2b94303931a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430393330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b94303a54d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b94303a54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a5820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a5cb8"/>
        <function-ref name="get" scoped="" ref="0x2b94303a5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a4020"/>
        <function-ref name="set" scoped="" ref="0x2b94303a41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b94303aa1a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b94303aa1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303aa4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303aa678"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303aa800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303aa988"/>
        <function-ref name="get" scoped="" ref="0x2b94303aab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303aac98"/>
        <function-ref name="set" scoped="" ref="0x2b94303aae20"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b94303ba968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b94303ba968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303bacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303bae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303b91a8"/>
        <function-ref name="get" scoped="" ref="0x2b94303b9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303b94b8"/>
        <function-ref name="set" scoped="" ref="0x2b94303b9640"/>
        <function-ref name="clr" scoped="" ref="0x2b94303b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b94303801a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b94303801a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303804f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430380678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430380800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430380988"/>
        <function-ref name="get" scoped="" ref="0x2b9430380b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430380c98"/>
        <function-ref name="set" scoped="" ref="0x2b9430380e20"/>
        <function-ref name="clr" scoped="" ref="0x2b943037f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b9430383348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b9430383348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430383698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430383820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303839a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430383b30"/>
        <function-ref name="get" scoped="" ref="0x2b9430383cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430383e40"/>
        <function-ref name="set" scoped="" ref="0x2b9430390020"/>
        <function-ref name="clr" scoped="" ref="0x2b94303901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b943039fe00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b943039fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303ac1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303ac330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303ac4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303ac640"/>
        <function-ref name="get" scoped="" ref="0x2b94303ac7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303ac950"/>
        <function-ref name="set" scoped="" ref="0x2b94303acad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94303acc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b943038f658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b943038f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943038f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943038fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b943038fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943038fe40"/>
        <function-ref name="get" scoped="" ref="0x2b943038e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943038e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b943038e330"/>
        <function-ref name="clr" scoped="" ref="0x2b943038e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b9430391968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b9430391968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430391cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430391e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b943039e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943039e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b943039e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943039e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b943039e640"/>
        <function-ref name="clr" scoped="" ref="0x2b943039e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b94303a2968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b94303a2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a11a8"/>
        <function-ref name="get" scoped="" ref="0x2b94303a1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a14b8"/>
        <function-ref name="set" scoped="" ref="0x2b94303a1640"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b94303a7658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b94303a7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303a79a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303a7b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303a7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303a7e40"/>
        <function-ref name="get" scoped="" ref="0x2b94303a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303a61a8"/>
        <function-ref name="set" scoped="" ref="0x2b94303a6330"/>
        <function-ref name="clr" scoped="" ref="0x2b94303a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b943036a878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b943036a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943036abc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943036ad50"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430377020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303771a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430377330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303774b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430377640"/>
        <function-ref name="clr" scoped="" ref="0x2b94303777c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b9430389968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b9430389968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430389cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430389e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430388020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303881a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430388330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303884b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430388640"/>
        <function-ref name="clr" scoped="" ref="0x2b94303887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b943038caf0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b943038caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943038ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b943038b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943038b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943038b330"/>
        <function-ref name="get" scoped="" ref="0x2b943038b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943038b640"/>
        <function-ref name="set" scoped="" ref="0x2b943038b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943038b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b943039ce00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b943039ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943039b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943039b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b943039b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943039b640"/>
        <function-ref name="get" scoped="" ref="0x2b943039b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943039b950"/>
        <function-ref name="set" scoped="" ref="0x2b943039bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b943039bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b94303ae658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b94303ae658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303ae9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303aeb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303aecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303aee40"/>
        <function-ref name="get" scoped="" ref="0x2b94303ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303ad1a8"/>
        <function-ref name="set" scoped="" ref="0x2b94303ad330"/>
        <function-ref name="clr" scoped="" ref="0x2b94303ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b94303991a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b94303991a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303994f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430399678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430399800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430399988"/>
        <function-ref name="get" scoped="" ref="0x2b9430399b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430399c98"/>
        <function-ref name="set" scoped="" ref="0x2b9430399e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9430398020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b9430395020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b9430395020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430395370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430395680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430395808"/>
        <function-ref name="get" scoped="" ref="0x2b9430395990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430395b18"/>
        <function-ref name="set" scoped="" ref="0x2b9430395ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430395e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b9430375e00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b9430375e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430382330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430382640"/>
        <function-ref name="get" scoped="" ref="0x2b94303827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430382950"/>
        <function-ref name="set" scoped="" ref="0x2b9430382ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430382c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b9430385020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b9430385020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430385370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303854f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430385680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430385808"/>
        <function-ref name="get" scoped="" ref="0x2b9430385990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430385b18"/>
        <function-ref name="set" scoped="" ref="0x2b9430385ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430385e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94303fc120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94303fc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303fc470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303fc5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303fc780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303fc908"/>
        <function-ref name="get" scoped="" ref="0x2b94303fca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303fcc18"/>
        <function-ref name="set" scoped="" ref="0x2b94303fcda0"/>
        <function-ref name="clr" scoped="" ref="0x2b94303fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94304095b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94304095b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430409908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430409a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430409c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430409da0"/>
        <function-ref name="get" scoped="" ref="0x2b9430408020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304081a8"/>
        <function-ref name="set" scoped="" ref="0x2b9430408330"/>
        <function-ref name="clr" scoped="" ref="0x2b94304084b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94303ffdc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94303ffdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303fe170"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303fe2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303fe480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303fe608"/>
        <function-ref name="get" scoped="" ref="0x2b94303fe790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303fe918"/>
        <function-ref name="set" scoped="" ref="0x2b94303feaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b94303fec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94303fb2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94303fb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303fb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303fb780"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303fb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303fba90"/>
        <function-ref name="get" scoped="" ref="0x2b94303fbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303fbda0"/>
        <function-ref name="set" scoped="" ref="0x2b94303fa020"/>
        <function-ref name="clr" scoped="" ref="0x2b94303fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9430408740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9430408740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430408a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430408c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430408da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430407020"/>
        <function-ref name="get" scoped="" ref="0x2b94304071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430407330"/>
        <function-ref name="set" scoped="" ref="0x2b94304074b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430407640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94303fd020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94303fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303fd808"/>
        <function-ref name="get" scoped="" ref="0x2b94303fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94303fdb18"/>
        <function-ref name="set" scoped="" ref="0x2b94303fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94303fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94303fa430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94303fa430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94303fa780"/>
        <function-ref name="isInput" scoped="" ref="0x2b94303fa908"/>
        <function-ref name="toggle" scoped="" ref="0x2b94303faa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94303fac18"/>
        <function-ref name="get" scoped="" ref="0x2b94303fada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430409020"/>
        <function-ref name="set" scoped="" ref="0x2b94304091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430409330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94304078c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94304078c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430407c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430407da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430406020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304061a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430406330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304064b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430406640"/>
        <function-ref name="clr" scoped="" ref="0x2b94304067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943095eab0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943095eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943095ee00"/>
        <function-ref name="isInput" scoped="" ref="0x2b943095d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943095d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943095d330"/>
        <function-ref name="get" scoped="" ref="0x2b943095d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943095d640"/>
        <function-ref name="set" scoped="" ref="0x2b943095d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943095d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430981a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430981a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430981d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430980020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309801a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430980330"/>
        <function-ref name="get" scoped="" ref="0x2b94309804b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430980640"/>
        <function-ref name="set" scoped="" ref="0x2b94309807c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430980950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943097ea10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943097ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943097ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2b943097d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943097d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943097d330"/>
        <function-ref name="get" scoped="" ref="0x2b943097d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943097d640"/>
        <function-ref name="set" scoped="" ref="0x2b943097d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943097d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943097ba10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943097ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943097bd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b943097a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943097a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943097a330"/>
        <function-ref name="get" scoped="" ref="0x2b943097a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943097a640"/>
        <function-ref name="set" scoped="" ref="0x2b943097a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943097a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430978a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430978a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430978d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430977020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430977330"/>
        <function-ref name="get" scoped="" ref="0x2b94309774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430977640"/>
        <function-ref name="set" scoped="" ref="0x2b94309777c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430977950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430975a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430975a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430975d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430974020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309741a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430974330"/>
        <function-ref name="get" scoped="" ref="0x2b94309744b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430974640"/>
        <function-ref name="set" scoped="" ref="0x2b94309747c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430974950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430972a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430972a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430972d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430971020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430971330"/>
        <function-ref name="get" scoped="" ref="0x2b94309714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430971640"/>
        <function-ref name="set" scoped="" ref="0x2b94309717c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430971950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943096fa10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943096fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943096fd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430994020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309941a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430994330"/>
        <function-ref name="get" scoped="" ref="0x2b94309944b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430994640"/>
        <function-ref name="set" scoped="" ref="0x2b94309947c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430994950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b943040ebd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b943040ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943040d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b943040d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943040d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943040d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b943040d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943040d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b943040d950"/>
        <function-ref name="clr" scoped="" ref="0x2b943040dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b943040a020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b943040a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943040a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b943040a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943040a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943040a808"/>
        <function-ref name="get" scoped="" ref="0x2b943040a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943040ab18"/>
        <function-ref name="set" scoped="" ref="0x2b943040aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b943040ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9430410930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9430410930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430410c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430410e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b943040f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943040f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b943040f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943040f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b943040f640"/>
        <function-ref name="clr" scoped="" ref="0x2b943040f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b943040dd60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b943040dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943040c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943040c260"/>
        <function-ref name="toggle" scoped="" ref="0x2b943040c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943040c570"/>
        <function-ref name="get" scoped="" ref="0x2b943040c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943040c880"/>
        <function-ref name="set" scoped="" ref="0x2b943040ca08"/>
        <function-ref name="clr" scoped="" ref="0x2b943040cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9430419120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9430419120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430419470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304195f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430419780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430419908"/>
        <function-ref name="get" scoped="" ref="0x2b9430419a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430419c18"/>
        <function-ref name="set" scoped="" ref="0x2b9430419da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430418020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b943040fa50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b943040fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943040fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b943040e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943040e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943040e330"/>
        <function-ref name="get" scoped="" ref="0x2b943040e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943040e640"/>
        <function-ref name="set" scoped="" ref="0x2b943040e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943040e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b943040ce18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b943040ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943040b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943040b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b943040b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943040b640"/>
        <function-ref name="get" scoped="" ref="0x2b943040b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943040b950"/>
        <function-ref name="set" scoped="" ref="0x2b943040bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b943040bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94304182a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94304182a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304185f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430418780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430418908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430418a90"/>
        <function-ref name="get" scoped="" ref="0x2b9430418c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430418da0"/>
        <function-ref name="set" scoped="" ref="0x2b9430417020"/>
        <function-ref name="clr" scoped="" ref="0x2b94304171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309dc970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309dc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309dccc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309dce48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309db020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309db1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309db330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309db4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309db640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309db7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309d9970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309d9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309d9cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309d9e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309d8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309d81a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309d8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309d84b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309d8640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309d87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309d6970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309d6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309d6cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309d6e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309d51a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309d5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309d54b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309d5640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309d3970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309d3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309d3cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309d3e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309d21a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309d2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309d24b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309d2640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309d0970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309d0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309d0cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309d0e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309cf1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309cf330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309cf4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309cf640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309cf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309f5970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309f5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309f5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309f5e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309f41a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309f4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309f44b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309f4640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309f2970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309f2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309f2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309f2e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309f11a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309f1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309f14b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309f1640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309f17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94309ef970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94309ef970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309efcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309efe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94309ee1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94309ee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94309ee4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94309ee640"/>
        <function-ref name="clr" scoped="" ref="0x2b94309ee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b943041f740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b943041f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943041fa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b943041fc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b943041fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943041e020"/>
        <function-ref name="get" scoped="" ref="0x2b943041e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943041e330"/>
        <function-ref name="set" scoped="" ref="0x2b943041e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b943041e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b943041cbd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b943041cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943041a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b943041a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943041a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943041a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b943041a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943041a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b943041a950"/>
        <function-ref name="clr" scoped="" ref="0x2b943041aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9430421500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9430421500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430421850"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304219d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430421b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430421ce8"/>
        <function-ref name="get" scoped="" ref="0x2b9430421e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430420020"/>
        <function-ref name="set" scoped="" ref="0x2b94304201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430420330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b943041e8c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b943041e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943041ec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b943041eda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b943041d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943041d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b943041d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943041d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b943041d640"/>
        <function-ref name="clr" scoped="" ref="0x2b943041d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b943041ad60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b943041ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304290d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430429260"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304293e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430429570"/>
        <function-ref name="get" scoped="" ref="0x2b94304296f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430429880"/>
        <function-ref name="set" scoped="" ref="0x2b9430429a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9430429b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94304205b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94304205b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430420908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430420a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430420c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430420da0"/>
        <function-ref name="get" scoped="" ref="0x2b943041f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943041f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b943041f330"/>
        <function-ref name="clr" scoped="" ref="0x2b943041f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b943041da50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b943041da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943041dda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b943041c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b943041c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943041c330"/>
        <function-ref name="get" scoped="" ref="0x2b943041c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943041c640"/>
        <function-ref name="set" scoped="" ref="0x2b943041c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b943041c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9430429e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9430429e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304281a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430428330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430428640"/>
        <function-ref name="get" scoped="" ref="0x2b94304287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430428950"/>
        <function-ref name="set" scoped="" ref="0x2b9430428ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430428c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a3e6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a3e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a3e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a3eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a3ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a3c020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a3c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a3c330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a3c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a3c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a3a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a3a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a3aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a3abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a3ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a39020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a39330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a394b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a39640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a37710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a37710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a37a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a37be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a37d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a36020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a36330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a36640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a34710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a34710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a34a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a34be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a34d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a33020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a33330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a334b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a33640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a5a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a5a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a5aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a5abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a5ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a59020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a59330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a59640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a57710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a57710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a57a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a57be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a57d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a56020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a56330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a56640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a54710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a54a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a54be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a54d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a53020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a53330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a534b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a53640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a51710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a51a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a51be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a51d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a50020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a50330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a50640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9430430120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9430430120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430430470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304305f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430430780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430430908"/>
        <function-ref name="get" scoped="" ref="0x2b9430430a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430430c18"/>
        <function-ref name="set" scoped="" ref="0x2b9430430da0"/>
        <function-ref name="clr" scoped="" ref="0x2b943042e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b943042c5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b943042c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943042c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b943042ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b943042cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943042cda0"/>
        <function-ref name="get" scoped="" ref="0x2b943042b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943042b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b943042b330"/>
        <function-ref name="clr" scoped="" ref="0x2b943042b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9430423e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9430423e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304221c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430422348"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304224d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430422658"/>
        <function-ref name="get" scoped="" ref="0x2b94304227e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430422968"/>
        <function-ref name="set" scoped="" ref="0x2b9430422af0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430422c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b943042e2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b943042e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943042e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943042e780"/>
        <function-ref name="toggle" scoped="" ref="0x2b943042e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943042ea90"/>
        <function-ref name="get" scoped="" ref="0x2b943042ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943042eda0"/>
        <function-ref name="set" scoped="" ref="0x2b943042d020"/>
        <function-ref name="clr" scoped="" ref="0x2b943042d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b943042b740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b943042b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943042ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b943042bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b943042bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943042a020"/>
        <function-ref name="get" scoped="" ref="0x2b943042a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943042a330"/>
        <function-ref name="set" scoped="" ref="0x2b943042a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b943042a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9430431020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9430431020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430431370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304314f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430431680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430431808"/>
        <function-ref name="get" scoped="" ref="0x2b9430431990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430431b18"/>
        <function-ref name="set" scoped="" ref="0x2b9430431ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430431e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b943042d430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b943042d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943042d780"/>
        <function-ref name="isInput" scoped="" ref="0x2b943042d908"/>
        <function-ref name="toggle" scoped="" ref="0x2b943042da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943042dc18"/>
        <function-ref name="get" scoped="" ref="0x2b943042dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943042c020"/>
        <function-ref name="set" scoped="" ref="0x2b943042c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b943042c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b943042a8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b943042a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943042ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b943042ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430439020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304391a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430439330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304394b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430439640"/>
        <function-ref name="clr" scoped="" ref="0x2b94304397c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430aa86a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430aa86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430aa89f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430aa8b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430aa8d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430aa6020"/>
        <function-ref name="get" scoped="" ref="0x2b9430aa61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430aa6330"/>
        <function-ref name="set" scoped="" ref="0x2b9430aa64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430aa6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430aa4710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430aa4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430aa4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430aa4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430aa4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430aa3020"/>
        <function-ref name="get" scoped="" ref="0x2b9430aa31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430aa3330"/>
        <function-ref name="set" scoped="" ref="0x2b9430aa34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430aa3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430aa1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430aa1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430aa1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430aa1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430aa1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430aa0020"/>
        <function-ref name="get" scoped="" ref="0x2b9430aa01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430aa0330"/>
        <function-ref name="set" scoped="" ref="0x2b9430aa04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430aa0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a9e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a9e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a9ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a9ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a9ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a9d020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a9d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a9d330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a9d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a9d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430a9b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430a9b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430a9ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430a9bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430a9bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430a9a020"/>
        <function-ref name="get" scoped="" ref="0x2b9430a9a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430a9a330"/>
        <function-ref name="set" scoped="" ref="0x2b9430a9a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430a9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430ac2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430ac2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430ac2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430ac2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430ac2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430ac1020"/>
        <function-ref name="get" scoped="" ref="0x2b9430ac11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430ac1330"/>
        <function-ref name="set" scoped="" ref="0x2b9430ac14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430ac1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430abf710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430abf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430abfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430abfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430abfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430abe020"/>
        <function-ref name="get" scoped="" ref="0x2b9430abe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430abe330"/>
        <function-ref name="set" scoped="" ref="0x2b9430abe4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430abe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430abc710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430abc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430abca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430abcbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430abcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430abb020"/>
        <function-ref name="get" scoped="" ref="0x2b9430abb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430abb330"/>
        <function-ref name="set" scoped="" ref="0x2b9430abb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430abb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9430441bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9430441bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430440020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304401a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430440330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304404b8"/>
        <function-ref name="get" scoped="" ref="0x2b9430440640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304407c8"/>
        <function-ref name="set" scoped="" ref="0x2b9430440950"/>
        <function-ref name="clr" scoped="" ref="0x2b9430440ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b943043d020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b943043d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943043d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b943043d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943043d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943043d808"/>
        <function-ref name="get" scoped="" ref="0x2b943043d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943043db18"/>
        <function-ref name="set" scoped="" ref="0x2b943043dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b943043de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9430433930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9430433930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430433c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430433e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430432020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304321a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430432330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304324b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430432640"/>
        <function-ref name="clr" scoped="" ref="0x2b94304327c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9430440d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9430440d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943043f0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943043f260"/>
        <function-ref name="toggle" scoped="" ref="0x2b943043f3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943043f570"/>
        <function-ref name="get" scoped="" ref="0x2b943043f6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943043f880"/>
        <function-ref name="set" scoped="" ref="0x2b943043fa08"/>
        <function-ref name="clr" scoped="" ref="0x2b943043fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b943043c120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b943043c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943043c470"/>
        <function-ref name="isInput" scoped="" ref="0x2b943043c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943043c780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943043c908"/>
        <function-ref name="get" scoped="" ref="0x2b943043ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943043cc18"/>
        <function-ref name="set" scoped="" ref="0x2b943043cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b943043b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9430432a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9430432a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430432da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430441020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304411a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430441330"/>
        <function-ref name="get" scoped="" ref="0x2b94304414b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430441640"/>
        <function-ref name="set" scoped="" ref="0x2b94304417c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430441950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b943043fe18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b943043fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943043e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943043e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b943043e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943043e640"/>
        <function-ref name="get" scoped="" ref="0x2b943043e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943043e950"/>
        <function-ref name="set" scoped="" ref="0x2b943043ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b943043ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b943043b2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b943043b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943043b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b943043b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b943043b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943043ba90"/>
        <function-ref name="get" scoped="" ref="0x2b943043bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943043bda0"/>
        <function-ref name="set" scoped="" ref="0x2b943043a020"/>
        <function-ref name="clr" scoped="" ref="0x2b943043a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b1a6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b1a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b1a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b1ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b1ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b19020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b19330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b194b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b19640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b17710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b17710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b17a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b17be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b17d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b15020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b15330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b154b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b15640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b13710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b13a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b13be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b13d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b12020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b12330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b124b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b12640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b10710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b10710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b10a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b10be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b10d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b0f020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b0f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b0f330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b0f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b0f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b0d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b0d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b0da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b0dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b0dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b0c020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b0c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b0c330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b0c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b0a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b0a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b0aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b0abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b0ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b09020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b09330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b094b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b09640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b07710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b07710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b07a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b07be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b07d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b06020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b06330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b064b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b06640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b30710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b30a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b30be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b30d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b2f020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b2f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b2f330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b2f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b2f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9430443430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9430443430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430443780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430443908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430443a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430443c18"/>
        <function-ref name="get" scoped="" ref="0x2b9430443da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430442020"/>
        <function-ref name="set" scoped="" ref="0x2b94304421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430442330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94304528c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94304528c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430452c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430452da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430451020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304511a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430451330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304514b8"/>
        <function-ref name="set" scoped="" ref="0x2b9430451640"/>
        <function-ref name="clr" scoped="" ref="0x2b94304517c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94304451e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94304451e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430445538"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304456c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430445848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304459d0"/>
        <function-ref name="get" scoped="" ref="0x2b9430445b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430445ce0"/>
        <function-ref name="set" scoped="" ref="0x2b9430445e68"/>
        <function-ref name="clr" scoped="" ref="0x2b9430444020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94304425b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94304425b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430442908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430442a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430442c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430442da0"/>
        <function-ref name="get" scoped="" ref="0x2b9430453020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304531a8"/>
        <function-ref name="set" scoped="" ref="0x2b9430453330"/>
        <function-ref name="clr" scoped="" ref="0x2b94304534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9430451a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9430451a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430451da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430450020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304501a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430450330"/>
        <function-ref name="get" scoped="" ref="0x2b94304504b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430450640"/>
        <function-ref name="set" scoped="" ref="0x2b94304507c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430450950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94304442a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94304442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304445f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430444780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430444908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430444a90"/>
        <function-ref name="get" scoped="" ref="0x2b9430444c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430444da0"/>
        <function-ref name="set" scoped="" ref="0x2b9430443020"/>
        <function-ref name="clr" scoped="" ref="0x2b94304431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9430453740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9430453740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430453a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430453c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430453da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430452020"/>
        <function-ref name="get" scoped="" ref="0x2b94304521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430452330"/>
        <function-ref name="set" scoped="" ref="0x2b94304524b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430452640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9430450bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9430450bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943044e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b943044e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943044e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943044e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b943044e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943044e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b943044e950"/>
        <function-ref name="clr" scoped="" ref="0x2b943044ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b666a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b666a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b669f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b66b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b66d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b65020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b65330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b654b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b65640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b63710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b63710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b63a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b63be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b63d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b61020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b61330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b614b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b5f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b5f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b5fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b5fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b5fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b8c020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b8c330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b8c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b8c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b8a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b8a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b8aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b8abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b8ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b89020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b89330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b89640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b87710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b87710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b87a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b87be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b87d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b86020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b86330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b864b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b86640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b84710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b84710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b84a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b84be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b84d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b83020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b83330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b834b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b83640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b81710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b81710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b81a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b81be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b81d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b80020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b80330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b804b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430b7e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430b7e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430b7ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430b7ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430b7ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430b7d020"/>
        <function-ref name="get" scoped="" ref="0x2b9430b7d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430b7d330"/>
        <function-ref name="set" scoped="" ref="0x2b9430b7d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430b7d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943045aac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943045aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943045ae10"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430468020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430468330"/>
        <function-ref name="get" scoped="" ref="0x2b94304684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430468640"/>
        <function-ref name="set" scoped="" ref="0x2b94304687c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430468950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430477db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430477db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430476170"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304762f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430476480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430476608"/>
        <function-ref name="get" scoped="" ref="0x2b9430476790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430476918"/>
        <function-ref name="set" scoped="" ref="0x2b9430476aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430476c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94304713e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94304713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430471730"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304718b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430471a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430471bc8"/>
        <function-ref name="get" scoped="" ref="0x2b9430471d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430470020"/>
        <function-ref name="set" scoped="" ref="0x2b94304701a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430470330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943047e7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943047e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943047eb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b943047ecc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b943047ee48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943047d020"/>
        <function-ref name="get" scoped="" ref="0x2b943047d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943047d330"/>
        <function-ref name="set" scoped="" ref="0x2b943047d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b943047d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943047ac38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943047ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430479020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304791a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430479330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304794b8"/>
        <function-ref name="get" scoped="" ref="0x2b9430479640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304797c8"/>
        <function-ref name="set" scoped="" ref="0x2b9430479950"/>
        <function-ref name="clr" scoped="" ref="0x2b9430479ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430486020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430486020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430486370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304864f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430486680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430486808"/>
        <function-ref name="get" scoped="" ref="0x2b9430486990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430486b18"/>
        <function-ref name="set" scoped="" ref="0x2b9430486ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430486e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430481480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430481480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304817d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430481958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430481ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430481c68"/>
        <function-ref name="get" scoped="" ref="0x2b9430481df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430492020"/>
        <function-ref name="set" scoped="" ref="0x2b94304921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430492330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943048f7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943048f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943048fb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b943048fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b943048fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943048e020"/>
        <function-ref name="get" scoped="" ref="0x2b943048e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943048e330"/>
        <function-ref name="set" scoped="" ref="0x2b943048e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b943048e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943048a970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943048a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943048acc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b943048ae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b943049b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943049b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b943049b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943049b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b943049b640"/>
        <function-ref name="clr" scoped="" ref="0x2b943049b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430497ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430497ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430497e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430496020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304961a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430496330"/>
        <function-ref name="get" scoped="" ref="0x2b94304964b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430496640"/>
        <function-ref name="set" scoped="" ref="0x2b94304967c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430496950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9430493c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9430493c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304a4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304a41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304a4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304a44b8"/>
        <function-ref name="get" scoped="" ref="0x2b94304a4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304a47c8"/>
        <function-ref name="set" scoped="" ref="0x2b94304a4950"/>
        <function-ref name="clr" scoped="" ref="0x2b94304a4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b943049f020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b943049f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b943049f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b943049f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b943049f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b943049f808"/>
        <function-ref name="get" scoped="" ref="0x2b943049f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b943049fb18"/>
        <function-ref name="set" scoped="" ref="0x2b943049fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b943049fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94304ac180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94304ac180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94304ac4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94304ac658"/>
        <function-ref name="toggle" scoped="" ref="0x2b94304ac7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94304ac968"/>
        <function-ref name="get" scoped="" ref="0x2b94304acaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94304acc78"/>
        <function-ref name="set" scoped="" ref="0x2b94304ace00"/>
        <function-ref name="clr" scoped="" ref="0x2b94304ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94304e72c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94304e72c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b9430258128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b9430258128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94304e7610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b94304e78f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94304e78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b94304e7c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b94304e7dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b94304e6020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b94304e61a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b94304e6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9430504898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9430504898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430504be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9430505198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9430505198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b94305054e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b94305041d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b94305041d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430504520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b94305057d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b94305057d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430505b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9430505ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9430505e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b94302601c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b94302601c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9430260518"/>
        <function-ref name="runTask" scoped="" ref="0x2b94302606a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b943025d600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b943025d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b943025d950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b943025dad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b943025dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b94303132b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b94303132b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9430313600"/>
        <function-ref name="runTask" scoped="" ref="0x2b9430313788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b943031c758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b943031c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b943031caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9430314448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9430314448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430314798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9430314920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9430314aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b94303392b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94303392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9430339600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9430333660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9430333660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b94303339b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b943033ca80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b943033ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b943033cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b943052a578" loc="11:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b943052a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94305288f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9430529020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9430529d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94305298c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b94305271c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9430528d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430529470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b943051f0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9430528320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b943051f598"/>
        <function-ref name="stop" scoped="" ref="0x2b943051fa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9430358a60" loc="6:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9430358a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9430358db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations0" ref="0x2b9430533730" loc="14:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations0" scoped="" ref="0x2b9430533730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b9430533a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button0" ref="0x2b943050bc38" loc="9:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button0" scoped="" ref="0x2b943050bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430523020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94305231a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430523330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94305234b8"/>
        <function-ref name="get" scoped="" ref="0x2b9430523640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94305237c8"/>
        <function-ref name="set" scoped="" ref="0x2b9430523950"/>
        <function-ref name="clr" scoped="" ref="0x2b9430523ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b94305109d0" loc="7:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b94305109d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9430510d20"/>
        <function-ref name="initDone" scoped="" ref="0x2b943050c020"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b943050c1a8"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b943050c330"/>
        <function-ref name="barWritten" scoped="" ref="0x2b943050c4b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b943050c640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b943050c7c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b943050c950"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b943050cad8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b943050cc60"/>
        <function-ref name="setPixel" scoped="" ref="0x2b943050cde8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b943050b020"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b943050b1a8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b943050b430"/>
        <function-ref name="writePixel" scoped="" ref="0x2b943050b5b8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b943050b740"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b943050b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource0" ref="0x2b9430535830" loc="13:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource0" scoped="" ref="0x2b9430535830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9430535b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9430535d08"/>
        <function-ref name="request" scoped="" ref="0x2b9430526020"/>
        <function-ref name="granted" scoped="" ref="0x2b94305261a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9430526330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2b9430523e48" loc="10:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2b9430523e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94305221c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430522348"/>
        <function-ref name="toggle" scoped="" ref="0x2b94305224d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430522658"/>
        <function-ref name="get" scoped="" ref="0x2b94305227e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430522968"/>
        <function-ref name="set" scoped="" ref="0x2b9430522af0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430522c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations1" ref="0x2b9430525c08" loc="16:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations1" scoped="" ref="0x2b9430525c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b9430534020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource1" ref="0x2b9430533e00" loc="15:ArbiterDemoC.nc">
      <component-ref qname="ArbiterDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource1" scoped="" ref="0x2b9430533e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94305251a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9430525330"/>
        <function-ref name="request" scoped="" ref="0x2b94305254b8"/>
        <function-ref name="granted" scoped="" ref="0x2b9430525640"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94305257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b94305570c0" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b94305570c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9430557410"/>
        <function-ref name="initDone" scoped="" ref="0x2b9430557598"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9430557720"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94305578a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9430557a30"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9430557bb8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9430557d40"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9430556020"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94305561a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9430556330"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94305564b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9430556640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94305567c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9430556a50"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9430556bd8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9430556d60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9430555020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b94305b8368" loc="170:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b94305b8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94305b86b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b94305b8840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b943057f020" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b943057f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b943057f370"/>
        <function-ref name="initDone" scoped="" ref="0x2b943057f4f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b943057f680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b943057f808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b943057f990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b943057fb18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b943057fca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b943057fe28"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b943057e020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b943057e1a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b943057e330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b943057e4b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b943057e640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b943057e8c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b943057ea50"/>
        <function-ref name="initLCD" scoped="" ref="0x2b943057ebd8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b943057ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b94305ce6c8" loc="219:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b94305ce6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94305cea18"/>
        <function-ref name="runTask" scoped="" ref="0x2b94305ceba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b94305b00c0" loc="186:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b94305b00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94305b0410"/>
        <function-ref name="runTask" scoped="" ref="0x2b94305b0598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b94305e8190" loc="278:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b94305e8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94305e84e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b94305e8668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b94305797d0" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b94305797d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9430579b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b9430579ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b9430600ad0" loc="356:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b9430600ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9430600e20"/>
        <function-ref name="runTask" scoped="" ref="0x2b94305ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b94305d97d0" loc="247:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b94305d97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94305d9b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b94305d9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b943062ba60" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ArbiterDemoAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b943062ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94307efd60"/>
        <function-ref name="fired" scoped="" ref="0x2b94307f0470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94307ef1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94307f0d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b94307ee648"/>
        <function-ref name="gett0" scoped="" ref="0x2b94307ee1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94307f08c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94307f1620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94307ef790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94307f1ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b94307f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b943063de30" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b943063de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94306360c0"/>
        <function-ref name="fired" scoped="" ref="0x2b9430638798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94306374d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9430637088"/>
        <function-ref name="getdt" scoped="" ref="0x2b9430636960"/>
        <function-ref name="gett0" scoped="" ref="0x2b9430636510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430638be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94306399e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9430637aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9430639e80"/>
        <function-ref name="stop" scoped="" ref="0x2b9430638348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b943064a4a0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b943064a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94306466c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9430649db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9430647ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9430647688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9430645020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9430646b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430647238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9430649020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94306460f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94306494c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9430649960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9430641980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9430641980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9430643560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9430634768" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9430634768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430634ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b9430662e40" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b9430662e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b943064dbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b943064c548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b943064c0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b943064c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b943063e020" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b943063e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b943063e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b9430650838" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9430650838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b943064e020"/>
        <function-ref name="fired" scoped="" ref="0x2b943064f020"/>
        <function-ref name="startAt" scoped="" ref="0x2b943064f930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b943064f4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b943064e4a8"/>
        <function-ref name="start" scoped="" ref="0x2b94306565e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9430656ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b943075a938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b943075a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9430756020"/>
        <function-ref name="fired" scoped="" ref="0x2b9430758088"/>
        <function-ref name="startAt" scoped="" ref="0x2b9430758998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430758510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b94307564a8"/>
        <function-ref name="start" scoped="" ref="0x2b94307596b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9430759b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b943075a190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b943075a190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b9430259d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b9430259d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b943075a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9430756a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9430756a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9430755828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9430754190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9430755cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9430754618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b9430c63020" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9430c63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9430c63370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9430c634f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9430c63680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9430c63808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9430c63990"/>
        <function-ref name="setControl" scoped="" ref="0x2b9430c63b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9430c36da8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9430c36da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9430c6c470"/>
        <function-ref name="fired" scoped="" ref="0x2b9430c6d510"/>
        <function-ref name="startAt" scoped="" ref="0x2b9430c6de20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430c6d998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9430c6c8f8"/>
        <function-ref name="start" scoped="" ref="0x2b9430c35b38"/>
        <function-ref name="stop" scoped="" ref="0x2b9430c6d088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9430c36600" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9430c36600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430c36950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9430c6b020" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9430c6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9430c6bd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9430c6a6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9430c6a230"/>
        <function-ref name="overflow" scoped="" ref="0x2b9430c6ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b9430c5e0a0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9430c5e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9430c5eb98"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9430c5e578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9430c5e700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9430c5e888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9430c5ea10"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9430c5e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b9430c62020" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9430c62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9430c607a8"/>
        <function-ref name="fired" scoped="" ref="0x2b9430c61560"/>
        <function-ref name="get" scoped="" ref="0x2b9430c62ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b9430c619e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9430c60c30"/>
        <function-ref name="set" scoped="" ref="0x2b9430c61088"/>
        <function-ref name="start" scoped="" ref="0x2b9430c61e70"/>
        <function-ref name="stop" scoped="" ref="0x2b9430c60320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9430c68168" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9430c68168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9430c65270"/>
        <function-ref name="test" scoped="" ref="0x2b9430c66930"/>
        <function-ref name="get" scoped="" ref="0x2b9430c68ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b9430c656f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b9430c65bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b9430c67b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b9430c676d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9430c66db8"/>
        <function-ref name="set" scoped="" ref="0x2b9430c671f8"/>
        <function-ref name="start" scoped="" ref="0x2b9430c66020"/>
        <function-ref name="stop" scoped="" ref="0x2b9430c664a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b94306e8020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b94306e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b94306e8370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b94306e84f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b94306e8680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b94306e8808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b94306e8990"/>
        <function-ref name="setControl" scoped="" ref="0x2b94306e8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b94306e3218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b94306e3218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b94306e3d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b94306e36f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b94306e3878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b94306e3a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b94306e3b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b94306e3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b94306e6020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b94306e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b94306e47a8"/>
        <function-ref name="fired" scoped="" ref="0x2b94306e5560"/>
        <function-ref name="get" scoped="" ref="0x2b94306e6ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b94306e59e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b94306e4c30"/>
        <function-ref name="set" scoped="" ref="0x2b94306e5088"/>
        <function-ref name="start" scoped="" ref="0x2b94306e5e70"/>
        <function-ref name="stop" scoped="" ref="0x2b94306e4320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94306d5e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94306d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b94306e90f8"/>
        <function-ref name="test" scoped="" ref="0x2b94306ce798"/>
        <function-ref name="get" scoped="" ref="0x2b94306d1a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b94306e9580"/>
        <function-ref name="getScale" scoped="" ref="0x2b94306e9a58"/>
        <function-ref name="reset" scoped="" ref="0x2b94306d0980"/>
        <function-ref name="overflow" scoped="" ref="0x2b94306d04f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b94306cec20"/>
        <function-ref name="set" scoped="" ref="0x2b94306d0020"/>
        <function-ref name="start" scoped="" ref="0x2b94306d0e08"/>
        <function-ref name="stop" scoped="" ref="0x2b94306ce310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b94306f5160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b94306f5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b94306f54b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b94306f5638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b94306f57c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b94306f5948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b94306f5ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b94306f5c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b94306f0268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94306f0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b94306f05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b94306f0958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b94306f0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b94306ef4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b94306f0e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b94306ef020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b94306ef1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b94306ef330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b94306f0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b94306f4190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b94306f4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b94306f2930"/>
        <function-ref name="fired" scoped="" ref="0x2b94306f36d0"/>
        <function-ref name="get" scoped="" ref="0x2b94306f4d10"/>
        <function-ref name="reset" scoped="" ref="0x2b94306f3b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b94306f2db8"/>
        <function-ref name="set" scoped="" ref="0x2b94306f31f8"/>
        <function-ref name="start" scoped="" ref="0x2b94306f2020"/>
        <function-ref name="stop" scoped="" ref="0x2b94306f24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94306de180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94306de180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b94306f7270"/>
        <function-ref name="test" scoped="" ref="0x2b94306dc930"/>
        <function-ref name="get" scoped="" ref="0x2b94306ded00"/>
        <function-ref name="setScale" scoped="" ref="0x2b94306f76f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b94306f7bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b94306ddb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b94306dd6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b94306dcdb8"/>
        <function-ref name="set" scoped="" ref="0x2b94306dd1f8"/>
        <function-ref name="start" scoped="" ref="0x2b94306dc020"/>
        <function-ref name="stop" scoped="" ref="0x2b94306dc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b943077ecf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b943077ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b943077d0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b943077d228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9430782c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9430782c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b943077e410"/>
        <function-ref name="fired" scoped="" ref="0x2b94307804a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9430780db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430780930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b943077e898"/>
        <function-ref name="start" scoped="" ref="0x2b94307819f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9430780020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9430787ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9430787ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9430783d60"/>
        <function-ref name="fired" scoped="" ref="0x2b9430785470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94307831c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9430785d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9430782648"/>
        <function-ref name="gett0" scoped="" ref="0x2b94307821f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94307858c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9430786620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9430783790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9430786ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b9430785020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b94307c6478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b94307c6478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94307c67c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b94307c6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b94307cb208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b94307cb208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94307c75f0"/>
        <function-ref name="fired" scoped="" ref="0x2b94307cab28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94307c88c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94307c8470"/>
        <function-ref name="getdt" scoped="" ref="0x2b94307c6020"/>
        <function-ref name="gett0" scoped="" ref="0x2b94307c7a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94307c8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94307cbd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94307c7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94307ca238"/>
        <function-ref name="stop" scoped="" ref="0x2b94307ca6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94307d1020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94307d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94307cd358"/>
        <function-ref name="fired" scoped="" ref="0x2b94307d09b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94307ce748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94307ce2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b94307cdc38"/>
        <function-ref name="gett0" scoped="" ref="0x2b94307cd7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94307d0e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94307d1b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94307ced38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94307d0088"/>
        <function-ref name="stop" scoped="" ref="0x2b94307d0548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b94307e2128" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b94307e2128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94307e2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b94307d9330" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b94307d9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94307d70c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b94307d79d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b94307d7548"/>
        <function-ref name="overflow" scoped="" ref="0x2b94307d7e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b943091bb90" loc="52:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b943091bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b943093e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b943093e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b943093e430" loc="53:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b943093e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b943093e780"/>
        <function-ref name="configure" scoped="" ref="0x2b943093e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b94307e9960" loc="50:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b94307e9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94307e9cb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b94307e9e38"/>
        <function-ref name="request" scoped="" ref="0x2b943091b020"/>
        <function-ref name="granted" scoped="" ref="0x2b943091b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b943091b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b943091b5b8" loc="51:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b943091b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b943091b908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b94307fd5b0" loc="48:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b94307fd5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b94307fd900"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94307fda88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b94307fc300" loc="49:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94307fc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b94307fc650"/>
        <function-ref name="configure" scoped="" ref="0x2b94307fc7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9430800748" loc="46:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9430800748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9430800a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9430800c20"/>
        <function-ref name="request" scoped="" ref="0x2b9430800da8"/>
        <function-ref name="granted" scoped="" ref="0x2b94307ff020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94307ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b94307ff9d8" loc="47:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b94307ff9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b94307ffd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9430882398" loc="92:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9430882398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9430882708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9430882890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9430880020" loc="96:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9430880020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9430880390"/>
        <function-ref name="configure" scoped="" ref="0x2b9430880518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9430882ad8" loc="93:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9430882ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9430882e28"/>
        <function-ref name="requested" scoped="" ref="0x2b9430881020"/>
        <function-ref name="granted" scoped="" ref="0x2b94308811a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9430881330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94308814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9430883670" loc="91:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9430883670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94308839e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9430883b68"/>
        <function-ref name="request" scoped="" ref="0x2b9430883cf0"/>
        <function-ref name="granted" scoped="" ref="0x2b9430883e78"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9430882030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9430881700" loc="94:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9430881700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9430881a50"/>
        <function-ref name="userId" scoped="" ref="0x2b9430881bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9430cc41a8" loc="44:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SharedResourceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9430cc41a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9430cc44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9430cc4780" loc="45:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SharedResourceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9430cc4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9430cc4ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9430cc4c58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9430cc4de0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9430cc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9430cc0698" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9430cc0698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9430cc0a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9430cc0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9430cbe3e8" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9430cbe3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9430cbe758"/>
        <function-ref name="configure" scoped="" ref="0x2b9430cbe8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9430cbeb68" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b9430cbeb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9430cbd020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9430cbd1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9430cbd330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9430cbd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9430cc0dd8" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9430cc0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9430cbf170"/>
        <function-ref name="requested" scoped="" ref="0x2b9430cbf2f8"/>
        <function-ref name="granted" scoped="" ref="0x2b9430cbf480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9430cbf608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9430cbf790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9430cbd700" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9430cbd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9430cbda50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9430cbdbd8"/>
        <function-ref name="led1On" scoped="" ref="0x2b9430cbdd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9430cbc020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9430cbc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9430cbc330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9430cbc4b8"/>
        <function-ref name="setPort" scoped="" ref="0x2b9430cbc640"/>
        <function-ref name="led0On" scoped="" ref="0x2b9430cbcc60"/>
        <function-ref name="set" scoped="" ref="0x2b9430cbc950"/>
        <function-ref name="led2On" scoped="" ref="0x2b9430cbc7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9430cbcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9430cc1830" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9430cc1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9430cc1ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9430cc1d28"/>
        <function-ref name="request" scoped="" ref="0x2b9430cc0020"/>
        <function-ref name="granted" scoped="" ref="0x2b9430cc01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9430cc0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9430cbf9d8" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9430cbf9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9430cbfd28"/>
        <function-ref name="userId" scoped="" ref="0x2b9430cbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9430cbb020" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b9430cbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9430cbb370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9430cbb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b943087a130" loc="50:SharedResourceImplP.nc">
      <component-ref qname="SharedResourceImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b943087a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b943087a480"/>
        <function-ref name="userId" scoped="" ref="0x2b943087a608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SharedResourceOperations" ref="0x2b943087c3c8" loc="48:SharedResourceImplP.nc">
      <component-ref qname="SharedResourceImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SharedResourceOperations" scoped="" ref="0x2b943087c3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b943087c718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations" ref="0x2b943087ca58" loc="49:SharedResourceImplP.nc">
      <component-ref qname="SharedResourceImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b943087ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b943087cda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b9430895630" loc="8:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b9430895630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94308928f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9430893020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9430893d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94308938c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b94308901c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9430892d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430893470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94308941e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9430892320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9430894688"/>
        <function-ref name="stop" scoped="" ref="0x2b9430894b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b943087ebb0" loc="7:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b943087ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9430896020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b94308961a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b9430896330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b94308964b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9430896640"/>
        <function-ref name="get" scoped="" ref="0x2b94308967c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9430896950"/>
        <function-ref name="setPort" scoped="" ref="0x2b9430896c60"/>
        <function-ref name="led2Off" scoped="" ref="0x2b94308951a8"/>
        <function-ref name="set" scoped="" ref="0x2b9430896ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b9430896de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b9430895020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b943087e5a8" loc="6:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b943087e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b943087e8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9430897440" loc="46:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9430897440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9430897790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9430897918"/>
        <function-ref name="led1On" scoped="" ref="0x2b9430897aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9430897c28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9430897db0"/>
        <function-ref name="get" scoped="" ref="0x2b94308a9020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b94308a91a8"/>
        <function-ref name="setPort" scoped="" ref="0x2b94308a94b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b94308a9950"/>
        <function-ref name="set" scoped="" ref="0x2b94308a9330"/>
        <function-ref name="led0On" scoped="" ref="0x2b94308a9640"/>
        <function-ref name="led2On" scoped="" ref="0x2b94308a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b94308a46c8" loc="50:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b94308a46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308a4a18"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308a4ba0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308a4d28"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308a3020"/>
        <function-ref name="get" scoped="" ref="0x2b94308a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308a3330"/>
        <function-ref name="set" scoped="" ref="0x2b94308a34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308a3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94308a8840" loc="46:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94308a8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94308a8b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b94308a3958" loc="51:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b94308a3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308a3ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308a3e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308a21a8"/>
        <function-ref name="get" scoped="" ref="0x2b94308a2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308a24b8"/>
        <function-ref name="set" scoped="" ref="0x2b94308a2640"/>
        <function-ref name="clr" scoped="" ref="0x2b94308a27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b94308a8e08" loc="47:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b94308a8e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b94308a51a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b94308a5330"/>
        <function-ref name="led1On" scoped="" ref="0x2b94308a54b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b94308a5640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b94308a57c8"/>
        <function-ref name="get" scoped="" ref="0x2b94308a5950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b94308a5ad8"/>
        <function-ref name="setPort" scoped="" ref="0x2b94308a5de8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b94308a4330"/>
        <function-ref name="set" scoped="" ref="0x2b94308a5c60"/>
        <function-ref name="led0On" scoped="" ref="0x2b94308a4020"/>
        <function-ref name="led2On" scoped="" ref="0x2b94308a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b94308a2ae0" loc="52:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b94308a2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308a2e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308a1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308a11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308a1330"/>
        <function-ref name="get" scoped="" ref="0x2b94308a14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308a1640"/>
        <function-ref name="set" scoped="" ref="0x2b94308a17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308a1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA6" ref="0x2b94308de518" loc="54:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA6" scoped="" ref="0x2b94308de518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308de868"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308de9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308deb78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ded00"/>
        <function-ref name="get" scoped="" ref="0x2b94308dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308dd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b94308dd330"/>
        <function-ref name="clr" scoped="" ref="0x2b94308dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB1" ref="0x2b94308dacb0" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB1" scoped="" ref="0x2b94308dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d9170"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d92f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d9480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d9608"/>
        <function-ref name="get" scoped="" ref="0x2b94308d9790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d9918"/>
        <function-ref name="set" scoped="" ref="0x2b94308d9aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d9c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB6" ref="0x2b94308d4818" loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB6" scoped="" ref="0x2b94308d4818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d4b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d4cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d4e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d3030"/>
        <function-ref name="get" scoped="" ref="0x2b94308d31b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d3340"/>
        <function-ref name="set" scoped="" ref="0x2b94308d34c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d3650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC3" ref="0x2b94308ce380" loc="69:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC3" scoped="" ref="0x2b94308ce380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ce6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ce858"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308ce9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ceb68"/>
        <function-ref name="get" scoped="" ref="0x2b94308cecf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308cee78"/>
        <function-ref name="set" scoped="" ref="0x2b94308f1030"/>
        <function-ref name="clr" scoped="" ref="0x2b94308f11b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b94308a6488" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b94308a6488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308a67d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308a6960"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308a6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308a6c70"/>
        <function-ref name="get" scoped="" ref="0x2b94308a6df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308c3020"/>
        <function-ref name="set" scoped="" ref="0x2b94308c31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308c3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD5" ref="0x2b94308e7cb0" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD5" scoped="" ref="0x2b94308e7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e6228"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e63b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e6538"/>
        <function-ref name="get" scoped="" ref="0x2b94308e66c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e6848"/>
        <function-ref name="set" scoped="" ref="0x2b94308e69d0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA1" ref="0x2b94308c0b38" loc="49:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA1" scoped="" ref="0x2b94308c0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308bf020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308bf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308bf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308bf4b8"/>
        <function-ref name="get" scoped="" ref="0x2b94308bf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308bf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b94308bf950"/>
        <function-ref name="clr" scoped="" ref="0x2b94308bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD0" ref="0x2b94308ec1b8" loc="75:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD0" scoped="" ref="0x2b94308ec1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ec508"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ec690"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308ec818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ec9a0"/>
        <function-ref name="get" scoped="" ref="0x2b94308ecb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308eccb0"/>
        <function-ref name="set" scoped="" ref="0x2b94308ece38"/>
        <function-ref name="clr" scoped="" ref="0x2b94308eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE2" ref="0x2b94308e0818" loc="86:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE2" scoped="" ref="0x2b94308e0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e0b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e0cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e0e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430903030"/>
        <function-ref name="get" scoped="" ref="0x2b94309031b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430903340"/>
        <function-ref name="set" scoped="" ref="0x2b94309034c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430903650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE7" ref="0x2b94308fe380" loc="91:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE7" scoped="" ref="0x2b94308fe380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308fe6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308fe858"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308fe9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308feb68"/>
        <function-ref name="get" scoped="" ref="0x2b94308fecf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308fee78"/>
        <function-ref name="set" scoped="" ref="0x2b94308fd030"/>
        <function-ref name="clr" scoped="" ref="0x2b94308fd1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC1" ref="0x2b94308d0020" loc="67:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC1" scoped="" ref="0x2b94308d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d0808"/>
        <function-ref name="get" scoped="" ref="0x2b94308d0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d0b18"/>
        <function-ref name="set" scoped="" ref="0x2b94308d0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA4" ref="0x2b94308bc1b8" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA4" scoped="" ref="0x2b94308bc1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308bc508"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308bc690"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308bc818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308bc9a0"/>
        <function-ref name="get" scoped="" ref="0x2b94308bcb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308bccb0"/>
        <function-ref name="set" scoped="" ref="0x2b94308bce38"/>
        <function-ref name="clr" scoped="" ref="0x2b94308df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB4" ref="0x2b94308d6380" loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB4" scoped="" ref="0x2b94308d6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d66d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d6858"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d6b68"/>
        <function-ref name="get" scoped="" ref="0x2b94308d6cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d6e78"/>
        <function-ref name="set" scoped="" ref="0x2b94308d5030"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d51b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC6" ref="0x2b94308efcb0" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC6" scoped="" ref="0x2b94308efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ee228"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308ee3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ee538"/>
        <function-ref name="get" scoped="" ref="0x2b94308ee6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308ee848"/>
        <function-ref name="set" scoped="" ref="0x2b94308ee9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308eeb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD3" ref="0x2b94308e9818" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD3" scoped="" ref="0x2b94308e9818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e9b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e9cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e9e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e8030"/>
        <function-ref name="get" scoped="" ref="0x2b94308e81b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e8340"/>
        <function-ref name="set" scoped="" ref="0x2b94308e84c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e8650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE5" ref="0x2b9430900020" loc="89:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE5" scoped="" ref="0x2b9430900020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430900370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94309004f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9430900680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430900808"/>
        <function-ref name="get" scoped="" ref="0x2b9430900990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430900b18"/>
        <function-ref name="set" scoped="" ref="0x2b9430900ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430900e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE0" ref="0x2b94308e2380" loc="84:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE0" scoped="" ref="0x2b94308e2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e26d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e2858"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e2b68"/>
        <function-ref name="get" scoped="" ref="0x2b94308e2cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e2e78"/>
        <function-ref name="set" scoped="" ref="0x2b94308e1030"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e11b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA7" ref="0x2b94308dd818" loc="55:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA7" scoped="" ref="0x2b94308dd818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ddb68"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ddcf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308dde78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308db030"/>
        <function-ref name="get" scoped="" ref="0x2b94308db1b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308db340"/>
        <function-ref name="set" scoped="" ref="0x2b94308db4c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308db650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB7" ref="0x2b94308d39b0" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB7" scoped="" ref="0x2b94308d39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d3d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d2330"/>
        <function-ref name="get" scoped="" ref="0x2b94308d24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d2640"/>
        <function-ref name="set" scoped="" ref="0x2b94308d27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b94308fd470" loc="93:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94308fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94308fd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b94308c3688" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b94308c3688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308c39d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308c3b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308c3ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308c3e70"/>
        <function-ref name="get" scoped="" ref="0x2b94308c2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308c21a8"/>
        <function-ref name="set" scoped="" ref="0x2b94308c2330"/>
        <function-ref name="clr" scoped="" ref="0x2b94308c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD1" ref="0x2b94308eb380" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD1" scoped="" ref="0x2b94308eb380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308eb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308eb858"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308eb9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ebb68"/>
        <function-ref name="get" scoped="" ref="0x2b94308ebcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308ebe78"/>
        <function-ref name="set" scoped="" ref="0x2b94308ea030"/>
        <function-ref name="clr" scoped="" ref="0x2b94308ea1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA2" ref="0x2b94308bfe38" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA2" scoped="" ref="0x2b94308bfe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308be1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308be348"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308be4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308be658"/>
        <function-ref name="get" scoped="" ref="0x2b94308be7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308be968"/>
        <function-ref name="set" scoped="" ref="0x2b94308beaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308bec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB2" ref="0x2b94308d8020" loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB2" scoped="" ref="0x2b94308d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d8808"/>
        <function-ref name="get" scoped="" ref="0x2b94308d8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d8b18"/>
        <function-ref name="set" scoped="" ref="0x2b94308d8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC4" ref="0x2b94308f1518" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC4" scoped="" ref="0x2b94308f1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308f1868"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308f19f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308f1b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308f1d00"/>
        <function-ref name="get" scoped="" ref="0x2b94308f0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308f01a8"/>
        <function-ref name="set" scoped="" ref="0x2b94308f0330"/>
        <function-ref name="clr" scoped="" ref="0x2b94308f04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD6" ref="0x2b94308e4020" loc="81:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD6" scoped="" ref="0x2b94308e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e4808"/>
        <function-ref name="get" scoped="" ref="0x2b94308e4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e4b18"/>
        <function-ref name="set" scoped="" ref="0x2b94308e4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE3" ref="0x2b94309039b0" loc="87:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE3" scoped="" ref="0x2b94309039b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9430903d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430902020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309021a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430902330"/>
        <function-ref name="get" scoped="" ref="0x2b94309024b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430902640"/>
        <function-ref name="set" scoped="" ref="0x2b94309027c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9430902950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB0" ref="0x2b94308db9b0" loc="57:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB0" scoped="" ref="0x2b94308db9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308dbd00"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308da020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308da1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308da330"/>
        <function-ref name="get" scoped="" ref="0x2b94308da4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308da640"/>
        <function-ref name="set" scoped="" ref="0x2b94308da7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308da950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA5" ref="0x2b94308df380" loc="53:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA5" scoped="" ref="0x2b94308df380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308df6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308df858"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308df9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308dfb68"/>
        <function-ref name="get" scoped="" ref="0x2b94308dfcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308dfe78"/>
        <function-ref name="set" scoped="" ref="0x2b94308de030"/>
        <function-ref name="clr" scoped="" ref="0x2b94308de1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB5" ref="0x2b94308d5518" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB5" scoped="" ref="0x2b94308d5518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d5868"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d59f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d5b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d5d00"/>
        <function-ref name="get" scoped="" ref="0x2b94308d4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d41a8"/>
        <function-ref name="set" scoped="" ref="0x2b94308d4330"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC2" ref="0x2b94308cf1b8" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC2" scoped="" ref="0x2b94308cf1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308cf508"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308cf690"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308cf818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308cf9a0"/>
        <function-ref name="get" scoped="" ref="0x2b94308cfb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308cfcb0"/>
        <function-ref name="set" scoped="" ref="0x2b94308cfe38"/>
        <function-ref name="clr" scoped="" ref="0x2b94308ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC7" ref="0x2b94308ed020" loc="73:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC7" scoped="" ref="0x2b94308ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ed370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ed4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308ed680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ed808"/>
        <function-ref name="get" scoped="" ref="0x2b94308ed990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308edb18"/>
        <function-ref name="set" scoped="" ref="0x2b94308edca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308ede28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD4" ref="0x2b94308e89b0" loc="79:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD4" scoped="" ref="0x2b94308e89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e8d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e7330"/>
        <function-ref name="get" scoped="" ref="0x2b94308e74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e7640"/>
        <function-ref name="set" scoped="" ref="0x2b94308e77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE1" ref="0x2b94308e1518" loc="85:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE1" scoped="" ref="0x2b94308e1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e1868"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e19f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e1b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e1d00"/>
        <function-ref name="get" scoped="" ref="0x2b94308e0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e01a8"/>
        <function-ref name="set" scoped="" ref="0x2b94308e0330"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b94308c2810" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b94308c2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308c2b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308c2ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308c2e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308c1020"/>
        <function-ref name="get" scoped="" ref="0x2b94308c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308c1330"/>
        <function-ref name="set" scoped="" ref="0x2b94308c14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA0" ref="0x2b94308c19a0" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA0" scoped="" ref="0x2b94308c19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308c1cf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308c1e78"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308c0030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308c01b8"/>
        <function-ref name="get" scoped="" ref="0x2b94308c0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308c04c8"/>
        <function-ref name="set" scoped="" ref="0x2b94308c0650"/>
        <function-ref name="clr" scoped="" ref="0x2b94308c07d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE6" ref="0x2b94308ff1b8" loc="90:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE6" scoped="" ref="0x2b94308ff1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ff508"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ff690"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308ff818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ff9a0"/>
        <function-ref name="get" scoped="" ref="0x2b94308ffb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308ffcb0"/>
        <function-ref name="set" scoped="" ref="0x2b94308ffe38"/>
        <function-ref name="clr" scoped="" ref="0x2b94308fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA3" ref="0x2b94308bd020" loc="51:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA3" scoped="" ref="0x2b94308bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308bd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308bd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308bd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308bd808"/>
        <function-ref name="get" scoped="" ref="0x2b94308bd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308bdb18"/>
        <function-ref name="set" scoped="" ref="0x2b94308bdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308bde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB3" ref="0x2b94308d71b8" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB3" scoped="" ref="0x2b94308d71b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d7508"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d7690"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d7818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d79a0"/>
        <function-ref name="get" scoped="" ref="0x2b94308d7b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d7cb0"/>
        <function-ref name="set" scoped="" ref="0x2b94308d7e38"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC0" ref="0x2b94308d2cb0" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC0" scoped="" ref="0x2b94308d2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308d10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308d1228"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308d13b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308d1538"/>
        <function-ref name="get" scoped="" ref="0x2b94308d16c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308d1848"/>
        <function-ref name="set" scoped="" ref="0x2b94308d19d0"/>
        <function-ref name="clr" scoped="" ref="0x2b94308d1b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC5" ref="0x2b94308f0818" loc="71:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC5" scoped="" ref="0x2b94308f0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308f0d68"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ef020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308ef1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ef330"/>
        <function-ref name="get" scoped="" ref="0x2b94308ef4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308ef640"/>
        <function-ref name="set" scoped="" ref="0x2b94308ef7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94308ef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD2" ref="0x2b94308ea518" loc="77:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD2" scoped="" ref="0x2b94308ea518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308ea868"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308ea9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308eab78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308ead00"/>
        <function-ref name="get" scoped="" ref="0x2b94308e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e91a8"/>
        <function-ref name="set" scoped="" ref="0x2b94308e9330"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD7" ref="0x2b94308e31b8" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD7" scoped="" ref="0x2b94308e31b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94308e3508"/>
        <function-ref name="isInput" scoped="" ref="0x2b94308e3690"/>
        <function-ref name="toggle" scoped="" ref="0x2b94308e3818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94308e39a0"/>
        <function-ref name="get" scoped="" ref="0x2b94308e3b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94308e3cb0"/>
        <function-ref name="set" scoped="" ref="0x2b94308e3e38"/>
        <function-ref name="clr" scoped="" ref="0x2b94308e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE4" ref="0x2b9430902cb0" loc="88:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE4" scoped="" ref="0x2b9430902cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94309010a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9430901228"/>
        <function-ref name="toggle" scoped="" ref="0x2b94309013b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9430901538"/>
        <function-ref name="get" scoped="" ref="0x2b94309016c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9430901848"/>
        <function-ref name="set" scoped="" ref="0x2b94309019d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9430901b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9430927020" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SharedResourceP.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9430927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94302d9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94302d9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94309232b8"/>
        <function-ref name="fired" scoped="" ref="0x2b9430926978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94309246c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9430924278"/>
        <function-ref name="getdt" scoped="" ref="0x2b9430923b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b9430923708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9430926dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9430927b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9430924c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9430926088"/>
        <function-ref name="stop" scoped="" ref="0x2b9430926528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b943093a328" loc="52:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b943093a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b943093a678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b943093a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b943093aa88" loc="53:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b943093aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b943093add8"/>
        <function-ref name="configure" scoped="" ref="0x2b9430939020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b943093b0c0" loc="50:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b943093b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b943093b410"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b943093b598"/>
        <function-ref name="request" scoped="" ref="0x2b943093b720"/>
        <function-ref name="granted" scoped="" ref="0x2b943093b8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b943093ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b943093bcb8" loc="51:SharedResourceC.nc">
      <component-ref qname="ArbiterDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b943093bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operation" scoped="" ref="0x2b943093a0a0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9430354178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b943034ce40" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b943035a290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b942ffda378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b943035a020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b943035e940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b942ffda378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b943035d378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b943035d108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b943035de00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b943035db90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b943035c698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b94303710d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b94303717a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9430372328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9430370570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b94303729c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9430371e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b94303745a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9430374c18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b943025f3a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b943025d290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b943025fab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b9430269070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b9430269860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b943031c450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9430332d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b94302b81a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b943033c6d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94305206b8" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94305206b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b943052b020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b943051cb40" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b943051a7c8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b943051a230" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b943051a548" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b943051bac0" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b943052a020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b943052b740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b943051b328" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b943051d290" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b943051d020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b943052c6b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b943052c120" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b943052c438" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b943051dcd0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b943051da60" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b943051c4a0" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceOperations" loc="43:ResourceOperations.nc">
      <documentation loc="33:ResourceOperations.nc">
        <short>&#10; An EXAMPLE of an interface for performing operations on a resource.</short>
        <long>&#10; An EXAMPLE of an interface for performing operations on a resource.&#10; In this test application it is provided by the dedicated ResourceP component&#10; and passed through all of the proper components before being exposed by the&#10; shared resource at the topmost level.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="operation" ref="0x2b9430533378" loc="44:ResourceOperations.nc">
        <interfacedef-ref qname="ResourceOperations"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b9430533108" loc="44:ResourceOperations.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b94305146f0" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9430514480" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b9430514d60" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b9430506918" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9430508c20" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9430506020" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b9430506350" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b9430506678" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b9430515d78" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9430515198" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9430515498" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b94305157b8" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b9430515ad8" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b9430510098" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b9430519bc0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9430519020" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9430519320" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b9430519620" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b9430519920" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b9430510738" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b94305119b0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b9430517af0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9430517260" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b9430517560" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9430517860" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b943050aa48" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b943050a198" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b943050a498" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b943050a7b8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b94305085a0" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9430508020" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9430508320" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b9430513468" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b9430518b98" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b94305182a0" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b94305185d8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b9430518908" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b9430511328" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b94305099a0" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9430509108" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9430509408" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b9430509710" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b943050db18" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b943050d8a8" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b9430513b08" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b94305369b8" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b9430524a68" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b9430524178" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9430536258" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b94305353e0" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9430645bf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9430645bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b94306414c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b942ffdadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b943064b3f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b943064b3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b943064b628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b943064b628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9430663020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b943064b628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9430662070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9430663838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9430662760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b943063ee18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b943063ee18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9430655068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9430651958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9430653a78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b9430651020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9430652a08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b9430652d28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9430652258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b9430650110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9430655b28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b94306558b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430655068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9430653328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b943068ba58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302e5a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b94302e5e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b9430686e18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302f2100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b94302f2508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b9430688c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302e9980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b94302e9d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b9430686678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302e9980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b94302e9d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b9430686408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302e9980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b94302e9d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b9430685828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302f2100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b94302f2508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b94306855b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302f2100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b94302f2508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b94306884c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302e5a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b94302e5e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9430688258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302e5a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b94302e5e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b9430691328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b9430691a30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b9430690258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b9430690a08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b9430693110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302ec118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b94302ec520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b9430693ac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302ec118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b94302ec520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9430693850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94302ec118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b94302ec520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b9430683068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430683068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b943067f738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b94306829d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9430683920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430683068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9430680110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9430698020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9430682290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430683068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9430682020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9430683068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9430680808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b943067f020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b943067b418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b943067b418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b9430676900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b9430678a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b943067bcb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b943067b418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b9430675290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b9430675020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b9430675a10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b94306794c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b943067ad50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b94306761d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b943067a630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b943067b418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b943067a3c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b943067b418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9430679bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9430678328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b94308043e0" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9430804ca8" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b9430802cd8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b9430802528" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9430812428" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b9430811440" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b94307f5bb0" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9430812c28" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9430811d08" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b9430813a00" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b943080d258" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b9430824768" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9430263ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b943080e9a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b94308244f8" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b943080e9a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b94308098f8" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b94308063c8" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b943025a4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b943080e9a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9430806158" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b943080e9a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b9430806c68" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b943080e9a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b94308448f0" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b9430843070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b94308437e0" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b9430841758" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b9430840e70" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b943083f630" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b9430841020" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b943083e290" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b943083e020" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b943083c118" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b943083eb30" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b943083ee50" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b942ffd8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b94308441d8" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b9430840020" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b9430840738" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
